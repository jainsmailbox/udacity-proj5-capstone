# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

jobs:
  run_lint:
    docker:
    # Use the same Docker base as the project
    - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "requirements.txt" }}
        # fallback to using the latest cache if no exact match is found.
        - v1-dependencies-

    - run:
        name: install dependencies1
        command: |
                  python3 -m venv devops
                  . devops/bin/activate
                  make install
                  # Install hadolint
                  wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                  chmod +x /bin/hadolint
    - save_cache:
        paths:
        - ./devops
        key: v1-dependencies-{{ checksum "requirements.txt" }}

    # run lint!
    - run:
        name: run lint
        command: |
                  . devops/bin/activate
                  make lint
  upload_docker:
    docker:
      - image: cimg/go:1.17
    steps:
    - checkout
    - setup_remote_docker
    - run:
         name: Build and upload docker image to docker hub container
         command: |
            image="udacity-proj5-capstone-aj"
            docker build --tag=$image .
            docker image ls
            
            dockerpath="$DOCKER_USERNAME/$image"
            docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
            docker tag "$image:latest" "${dockerpath}:latest"
            docker push "${dockerpath}:latest"

  deploy_docker_to_eks:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install dependancies
          command: |
            yum install -y tar gzip
            curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.22.6/2022-03-09/bin/linux/amd64/kubectl
            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
      - run:
          name: create new cluster
          command: |
            aws cloudformation --region us-east-1 list-exports > cluster.txt
            cat cluster.txt
            if [ $(grep -i "eksctl-capstoneproject" cluster.txt | wc -l) -ge 1 ]
              then
              echo "EKS Cluster already exists in environment"
              else
              echo "creating EKS Cluster"
              eksctl create cluster --name eksctl-capstoneproject --version 1.28 --region us-east-1 --zones us-east-1a,us-east-1b,us-east-1c --nodegroup-name eksudanodegrp --node-type t2.small --nodes-min 2 --nodes-max 4 --managed
            fi  
            
      - run:
          name: deploy the docker container in aws eks cluster
          command: |
            aws eks --region us-east-1 update-kubeconfig --name eksctl-capstoneproject
            kubectl apply -f kubernetes/ajapp_deploy.yml
            kubectl get nodes
            kubectl get deployment
            kubectl get pod -o wide
            kubectl apply -f kubernetes/ajapp_loadbalancer.yml
            kubectl get services
             # kubectl rollout status deployments/capstoneproject
            kubectl describe svc udacity-proj5-capstone-aj      


workflows:
  version: 2.1
  default:
    jobs:
      - run_lint        
      - upload_docker:
          requires: [run_lint]
      - deploy_docker_to_eks:
          requires: [upload_docker]          
